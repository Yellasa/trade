package com.liantuo.deposit.advanceaccount.orm.mapper;

import static org.junit.Assert.*;

import java.util.List;

import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.unitils.database.annotations.Transactional;
import org.unitils.database.util.TransactionMode;
import org.unitils.dbunit.annotation.DataSet;
import org.unitils.spring.annotation.SpringBean;

import com.alibaba.fastjson.JSON;
import com.liantuo.deposit.advanceaccount.web.vo.queryvo.PoolQueryVo;
import com.liantuo.deposit.advanceaccount.web.vo.rsp.PoolRspVo;
import com.liantuo.unittest.BaseDaoTest;

@Transactional(value = TransactionMode.ROLLBACK)
@DataSet(value = { "DepPool.PoolMapper.xls" })
public class PoolMapperTest extends BaseDaoTest {

	@SpringBean("poolMapper")
	private PoolMapper poolMapper;

	@Test
	public void testFindByMerchantNoAndPoolNameNotNull() {
		PoolQueryVo poolQueryVo = new PoolQueryVo();
		poolQueryVo.setPoolName("单元测试数据1");
		poolQueryVo.setCoreMerchantNo("UNIT_TEST_MHT_1");
		PoolRspVo poolRspVo = poolMapper
				.findByMerchantNoAndPoolName(poolQueryVo);
		assertNotNull("poolMapper根据商户编号和资金池查找接口返回不应该是空！", poolRspVo);
		LOGGER.info("查询结果：{}", JSON.toJSONString(poolRspVo));
		assertEquals("查询结果核心商户编号错误", "UNIT_TEST_MHT_1",
				poolRspVo.getCoreMerchantNo());
	}

	@Test
	public void testFindByMeNotNull() {
		PoolQueryVo poolQueryVo = new PoolQueryVo();
		poolQueryVo.setPoolName("单元测试数据1");
		poolQueryVo.setCoreMerchantNo("UNIT_TEST_MHT_1");
		poolQueryVo.setShowCount(10);
		List<PoolRspVo> l = poolMapper.findPoolsQuery(poolQueryVo);
		assertNotNull("poolMapper根据商户编号和资金池查找接口返回不应该是空！", l);
		System.out.println(l.size());
	}

	private static final Logger LOGGER = LoggerFactory
			.getLogger(PoolMapperTest.class);
}
