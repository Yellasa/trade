package com.liantuo.trade.bus.process;


import org.springframework.transaction.annotation.Transactional;

import com.liantuo.payment.client.pay.PaymentResponse;
import com.liantuo.payment.client.pay.alipay.vo1.rsp.AlipayBatchPayPwdResponse;
import com.liantuo.trade.client.trade.packet.TradeRequest;
import com.liantuo.trade.client.trade.packet.body.TradeRequestBody;


public interface TradeExternalHasPaymentOnlineCreateInterface<B extends TradeRequestBody> {

	/**
	 * 事务处理(创建一系列记录)
	 */
	@Transactional(rollbackFor=Exception.class)
	public void transactionCreate(TradeRequest<B> tradeRequest) throws Exception;

	/**
	 * 事务处理(更改为等待入账)
	 */
	@Transactional(rollbackFor=Exception.class)
	public void transactionEntry(TradeRequest<B> tradeRequest) throws Exception;
	
	/**
	 * 事务处理(更改为支付成功)
	 */
	@Transactional(rollbackFor=Exception.class)
	public void transactionPaySuccess(TradeRequest<B> tradeRequest) throws Exception;
	
	/**
	 * 事务处理(更改为支付失败)
	 */
	@Transactional(rollbackFor=Exception.class)
	public void transactionPayFailure(TradeRequest<B> tradeRequest) throws Exception;
	
	/**
	 * 格式、业务校验
	 */
	public void validate(TradeRequest<B> tradeRequest) throws Exception;
	
	
	/**
	 * 调用支付中心
	 * @param xml 请求报文
	 * @throws Exception
	 */
	public PaymentResponse requestPayment() throws Exception;
	
	/**
	 * 解析调用结果 获取状态  暂定obj对象   如果获取不到链接 则抛出异常
	 * @param obj
	 * @return
	 * @throws Exception
	 */
	public TradeState parseObject(PaymentResponse obj) throws Exception;
	
	/**
	 * 创建失败交易记录
	 * @param tradeRquest
	 * @throws Exception
	 */
	public void createPayFail(TradeRequest<B> tradeRequest) throws Exception;
	
	
	/**
	 *  组织支付中心请求报文
	 * @return 返回报文
	 * @throws Exception
	 */
	public String createPaymentRequest(TradeRequest<B> tradeRequest) throws Exception;
	
	public void prepareLedgerData(TradeRequest<B> tradeRequest);
	
	public void setReqNo(String reqNo);
	
	public Object getTradeDetails();
	
	/**
	 * xml序列化返回对象
	 * @param obj
	 * @return
	 */
	public String getPaymentResult(Object obj);
	
	public String getResponseXml();

}