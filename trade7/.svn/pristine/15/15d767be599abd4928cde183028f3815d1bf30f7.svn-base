package com.liantuo.trade.client.trade.packet.body.single_payment;

import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.Digits;
import javax.validation.constraints.Pattern;

import org.hibernate.validator.constraints.NotBlank;

import com.liantuo.trade.client.trade.packet.body.TradeRequestBody;
import com.liantuo.trade.common.constants.TradeConstants;
import com.liantuo.trade.common.validate.Format;
import com.liantuo.trade.common.validate.Required;

/**
 * 1.1.7	0006_001_010V1.0收款方账户解冻（公用）
 * @author yangting
 *2016年7月8日 下午2:38:37
 */
public class TradePacketReqBodyRecieveCaThaw  extends TradeRequestBody{

	/**
     * 参数名：交易客户保留字段1</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_1 format error", regexp = ".{0,64}", groups = Format.class)
    private String merchant_extend_field_1;

    /**
     * 参数名：交易客户保留字段2</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_2 format error", regexp = ".{0,64}", groups = Format.class)
    private String merchant_extend_field_2;

    /**
     * 参数名：交易客户保留字段3</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_3 format error", regexp = ".{0,64}", groups = Format.class)
    private String merchant_extend_field_3;

    /**
     * 参数名：交易客户保留字段4</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_4 format error", regexp = ".{0,128}", groups = Format.class)
    private String merchant_extend_field_4;

    /**
     * 参数名：交易客户保留字段5</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_5 format error", regexp = ".{0,128}", groups = Format.class)
    private String merchant_extend_field_5;

    /**
     * 参数名：交易客户保留字段6</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_6 format error", regexp = ".{0,256}", groups = Format.class)
    private String merchant_extend_field_6;

    /**
     * 参数名：交易客户保留字段7</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_7 format error", regexp = ".{0,256}", groups = Format.class)
    private String merchant_extend_field_7;

    /**
     * 参数名：交易客户保留字段8</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_8 format error", regexp = ".{0,256}", groups = Format.class)
    private String merchant_extend_field_8;

    /**
     * 参数名：交易客户保留字段9</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_9 format error", regexp = ".{0,256}", groups = Format.class)
    private String merchant_extend_field_9;

    /**
     * 参数名：交易客户保留字段10</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "merchant_extend_field_10 format error", regexp = ".{0,1024}", groups = Format.class)
    private String merchant_extend_field_10;

    /**
     * 参数名：交易发起方发起请求编号</br>
     * 参数类型：必填</br>
     */
    @NotBlank(message = "out_trade_no_ext is required", groups = {Required.class})
    @Pattern(message = "out_trade_no_ext format error", regexp = "[\\da-zA-Z_]{8,64}", groups = Format.class)
    private String out_trade_no_ext;

    /**
     * 参数名：交易发起方业务系统订单号</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "out_trade_no format error", regexp = ".{0}|[\\da-zA-Z_]{8,64}", groups = Format.class)
    private String out_trade_no;
    
    @NotBlank(message = "un_frozen_amt is required", groups = {Required.class})
    @DecimalMin(message = "un_frozen_amt format error", groups = {Format.class}, value = "0.01")
    @Digits(message = "un_frozen_amt format error", groups = {Format.class}, integer = TradeConstants.DIGIT_AMOUNT_LENGTH, fraction = 2)
    private String un_frozen_amt;
    
    
    /**
     * 参数名：付款方账户出账账务历史1</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "pay_account_out_accounting_his1 format error", regexp = ".{0,16}", groups = Format.class)
    private String pay_account_out_accounting_his1;

    /**
     * 参数名：付款方账户出账账务历史2</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "pay_account_out_accounting_his2 format error", regexp = ".{0,16}", groups = Format.class)
    private String pay_account_out_accounting_his2;

    /**
     * 参数名：付款方账户出账账务历史3</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "pay_account_out_accounting_his3 format error", regexp = ".{0,512}", groups = Format.class)
    private String pay_account_out_accounting_his3;
    
    /**
     * 参数名：收款方账户入账账务历史1</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "receive_account_in_accounting_his1 format error", regexp = ".{0,16}", groups = Format.class)
    private String receive_account_in_accounting_his1;

    /**
     * 参数名：收款方账户入账账务历史2</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "receive_account_in_accounting_his2 format error", regexp = ".{0,16}", groups = Format.class)
    private String receive_account_in_accounting_his2;

    /**
     * 参数名：收款方账户入账账务历史3</br>
     * 参数类型：可空</br>
     */
    @Pattern(message = "receive_account_in_accounting_his3receive_account_in_accounting_his3 format error", regexp = ".{0,512}", groups = Format.class)
    private String receive_account_in_accounting_his3;
}
